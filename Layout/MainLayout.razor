@using JeLSolucoesFiscais.Aplicacao.Criptografias
@using JeLSolucoesFiscais.Aplicacao.Usuario
@inherits LayoutComponentBase
@inject LocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        @if (acessoLiberado)
        {
            <div class="top-row px-4">
                <button class="btn btn-link" @onclick="Sair">Sair</button>
            </div>
        }

        <article class="content px-4">
            @Body
            <ChatBoot />
        </article>

    </main>
</div>


@code {
    private async Task Sair()
    {
        LocalStorageService.SetItemAsync("aXNBdXRoZW50aWNhdGVk", "ZmFsc2U="); //isAuthenticated
        LocalStorageService.SetItemAsync("ZW1haWw=", "");
        LocalStorageService.SetItemAsync("c2VuaGE=", "");

        NavigationManager.NavigateTo("/JeLSolucoesFiscais", true);
    }

    private bool isAuthenticated;
    private bool acessoLiberado;

    protected override async Task OnInitializedAsync()
    {
        Descriptografa Descriptografia = new Descriptografa { };
        UsuariosCadastrados usuariosCadastrados = new UsuariosCadastrados { };

        string email = await LocalStorageService.GetItemAsync("ZW1haWw=");
        string senha = await LocalStorageService.GetItemAsync("c2VuaGE=");

        isAuthenticated = await LocalStorageService.GetItemAsync("aXNBdXRoZW50aWNhdGVk") == "dHJ1ZQ=="; //IsAuthenticated == true
        acessoLiberado = usuariosCadastrados.VerificaCadastrousuario(Descriptografia.RetornaValorDescriptografado(email), Descriptografia.RetornaValorDescriptografado(senha)) && isAuthenticated;

    }

}

