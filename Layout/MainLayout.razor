@using JeLSolucoesFiscais.Aplicacao.Criptografias
@using JeLSolucoesFiscais.Aplicacao.Usuario
@inherits LayoutComponentBase
@inject LocalStorageService LocalStorageService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="page">
  <div class="sidebar">
    <NavMenu />
  </div>

  <main>
    @if (acessoLiberado)
    {
      <div class="top-row px-4">
        <button class="btn btn-link" @onclick="Sair">Sair</button>
      </div>
    }

    <article class="content px-3">
      @Body
      <ChatBoot />
    </article>

  </main>
</div>

@code {

  private bool isAuthenticated;
  private bool acessoLiberado;

  private async Task Sair()
  {
    string? retorno = await JS.InvokeAsync<string>("Sair");

    NavigationManager.NavigateTo("/JeLSolucoesFiscais", true);

    acessoLiberado = false;
  }


  protected override async Task OnInitializedAsync()
  {

    string? retorno = await JS.InvokeAsync<string>("VerificaLogin");

    // Descriptografa Descriptografia = new Descriptografa { };
    // UsuariosCadastrados usuariosCadastrados = new UsuariosCadastrados { };

    // string email = await LocalStorageService.GetItemAsync("ZW1haWw=");
    // string senha = await LocalStorageService.GetItemAsync("c2VuaGE=");

    acessoLiberado = retorno == "usuario não logado" ? false : true;

  }
}

