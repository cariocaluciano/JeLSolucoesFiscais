@using JeLSolucoesFiscais.Aplicacao.Criptografias
@using JeLSolucoesFiscais.Aplicacao.Usuario
@inject LocalStorageService LocalStorageService

<style>
    /* Ocultar submenus inicialmente */
    .nav-submenu {
        display: none;
        margin-left: 15px;
    }

    /* Estilizando os links como nav-link */
    a.nav-link {
        cursor: pointer;
        color: #007bff;
        text-decoration: none;
        display: block;
        padding: 0.5rem 1rem;
    }

        a.nav-link:hover {
            text-decoration: underline;
        }
</style>

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">JeLSolucoesFiscais</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Início
            </NavLink>
        </div>
        @if (!acessoLiberado)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Login">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
        @if (acessoLiberado)
        {
            @if (isAdministrador) 
            { 
            <div class="nav-item px-3">
                <a class="nav-link" onclick="toggleSubMenu(this)">Administrador</a>
                <div class="nav-submenu">
                    <a class="nav-link" onclick="toggleSubMenu(this)">Dashboard</a>
                    <div class="nav-submenu">
                        <NavLink class="nav-link" href="Administrador">
                            <span aria-hidden="true"></span> Clientes
                        </NavLink>
                    </div>
                </div>
            </div>
            }

        <div class="nav-item px-3">
            <a class="nav-link" onclick="toggleSubMenu(this)"> EFD-Fiscal</a>
            <div class="nav-submenu">
                <a class="nav-link" onclick="toggleSubMenu(this)">Registros</a>
                <div class="nav-submenu">
                    <NavLink class="nav-link" href="EfdFiscal/RegistroC195C197 ">
                        <span aria-hidden="true"></span> C195/C197
                    </NavLink>
                    <NavLink class="nav-link" href="EfdFiscal/RegistrosD195D197">
                        <span aria-hidden="true"></span>  D195/D197
                    </NavLink>
                </div>
            </div>
        </div>
        <div class="nav-item px-3">
            <a class="nav-link" onclick="toggleSubMenu(this)">Relatórios</a>
            <div class="nav-submenu">
                <a class="nav-link" onclick="toggleSubMenu(this)">Monofásicos</a>
                <div class="nav-submenu">
                    <NavLink class="nav-link" href="RelatorioMonofasico/CfopPorNcm">
                        <span aria-hidden="true"></span> CFOP/NCM
                    </NavLink>
                </div>
            </div>
        </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private bool isAuthenticated;
    private bool acessoLiberado;
    private bool isAdministrador = true;

    protected override async Task OnInitializedAsync()
    {
        Descriptografa Descriptografia = new Descriptografa { };
        UsuariosCadastrados usuariosCadastrados = new UsuariosCadastrados { };

        string email = await LocalStorageService.GetItemAsync("ZW1haWw=");
        string senha = await LocalStorageService.GetItemAsync("c2VuaGE=");

        isAuthenticated = await LocalStorageService.GetItemAsync("aXNBdXRoZW50aWNhdGVk") == "dHJ1ZQ=="; //IsAuthenticated == true
        acessoLiberado = usuariosCadastrados.VerificaCadastrousuario(Descriptografia.RetornaValorDescriptografado(email), Descriptografia.RetornaValorDescriptografado(senha)) && isAuthenticated;

    }

}

<script>
    function toggleSubMenu(element) {
        const submenu = element.nextElementSibling;
        submenu.style.display = submenu.style.display === "block" ? "none" : "block";
        }
</script>
